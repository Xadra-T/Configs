set -g default-terminal "tmux-256color"
# set -ag terminal-overrides ",xterm-256color:RGB"
set -g terminal-overrides ",*256col*:Tc"

# To no longer need to exit tmux fully before config has its effect
unbind r
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux config reloaded!" # first press the prefix (Ctrl b), then press r
set -g mouse on
set -g focus-events on

# Help to highlight sth in tmux with mouse:
unbind -n MouseDrag1Pane
unbind -T copy-mode MouseDrag1Pane

# Reorder windows with Ctrl Shift Arrow
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Lengthen the amount of time status messages are displayed
set-option -g display-time 1500
set-option -g display-panes-time 1500

# Set the base-index to 1 rather than 0
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on # Automatically renumber windows when one is close

# Theme
fg=colour231
bg=colour237
set-window-option -g window-status-current-style bold,bg=yellow,fg=colour234
set -g window-status-activity-style bold,bg=${bg},fg=white
set-option -g message-style bg=${bg},fg=${fg}
set-option -g pane-border-style fg=colour15 # Inactive pane is white
set-option -g pane-active-border-style fg=colour45 # Activa pane is cyan

set -g status-justify absolute-centre
set -g status-interval 5  # Update interval for status bar (default: 15)
set -g status-left-length 35 # default 10
set -g status-right-length 90 # default 40

set -g status-left "#[fg=${fg},bold] #H #[fg=colour47] [#S]"
# set -g status-right '#[bg=colour232]#[fg=colour45,bold]#{pane_current_path} | %a %b %d | %H:%M '
set -g status-style "bg=${bg}"
set -g status-bg ${bg}

# How many characters allowed for the path
set -g @path_max 15
set -g status-right '#( ~/.config/tmux/path_shortener.sh "#{pane_current_path}" "#{@path_max}" ) #[fg=colour45,bold] | %a %b %d | %H:%M '



# --- Left side: Current Directory Path ---
# Set the length for the left status bar (important for long paths)
set -g status-left-length 100

# Define what goes on the left side
# Components:
#   #{pane_current_path}             - The current working directory of the pane
#   #S                               - Session name (optional, can be removed too)
#   P:#{pane_index}                  - Pane index (optional)
#   Note: You can add or remove elements as you like.
set -g status-left '#[fg=colour166,bold] #S #[fg=colour255,nobold]P:#{pane_index} #{pane_current_path} '



# --- Right side: Windows list, time, date, hostname ---
# Set the length for the right status bar (important for many windows)
#set -g status-right-length 150

# Define what goes on the right side
# Components:
#   #{window_status_list}            - The list of all windows (this is the key for your request)
#   #[fg=colour247] %H:%M %d-%b-%y    - Time and Date in a lighter gray
#   #[fg=colour166,bold] #(whoami)@#H - Username@Hostname in bold orange
#set -g status-right '#[fg=colour255] #{window_status_list} #[fg=colour247] %H:%M %d-%b-%y #[fg=colour166,bold] #(whoami)@#H '

# --- Window status formatting (how individual windows appear in the list) ---
# Format for inactive windows in the list (index, name)
#set -g window-status-format '#[fg=colour247]#I #W' # Light gray
# Format for the currently active window in the list (index, name)
#set -g window-status-current-format '#[fg=colour10,bold]#I #W' # Green bold

# Separator between window items (e.g., a space)
#set -g window-status-separator " "










# Enable two status lines
set -g status-lines 2

# General status bar settings (apply to both lines by default)
set -g status-bg 'colour237' # Dark gray background
set -g status-fg 'colour255' # White foreground

# --- Line 1 (Top Status Line) ---
# This uses status-format[0] for the first line.

# Left side of Line 1: Session & Pane Info (compact)
set -g status-format[0]-left-length 50 # Max length for left side of line 1
set -g status-format[0]-left '#[fg=colour166,bold] #S #[fg=colour255,nobold]P:#{pane_index} '

# Center of Line 1: Windows list (this is where your windows will be)
# status-justify centre ensures the windows list is centered if there's space.
set -g status-justify centre
# You can uncomment this if you prefer it explicitly right:
# set -g status-format[0]-centre '#{window_status_list}'


# Right side of Line 1: Time, Date, Host
set -g status-format[0]-right-length 80 # Max length for right side of line 1
set -g status-format[0]-right '#[fg=colour247] %H:%M %d-%b-%y #[fg=colour166,bold] #(whoami)@#H '


# --- Line 2 (Bottom Status Line - Dedicated to Path) ---
# This uses status-format[1] for the second line.

# Left side of Line 2: Full Current Directory Path
# Give it a very large length so it can take up almost the entire line
set -g status-format[1]-left-length 250
set -g status-format[1]-left '#[fg=colour10,bold]DIR:#[default] #{pane_current_path} '

# Ensure the center and right of Line 2 are empty, so the path can expand
set -g status-format[1]-centre ''
set -g status-format[1]-right ''


# --- Window status formatting (how individual windows appear in the list) ---
# These apply to the window list where it appears (Line 1 in this setup)
set -g window-status-format '#[fg=colour247]#I #W' # Light gray for inactive windows
set -g window-status-current-format '#[fg=colour10,bold]#I #W' # Green bold for active window
set -g window-status-separator " " # Separator between window items







## General
set -g set-clipboard on # Use system clipboard
set -g detach-on-destroy # Don't exit tmux when closing a session
set-window-option -g mode-keys vi # Enable vi mode for vim movements

## Bindings

# Create new window/pane in the current path
bind % split-window -h -c '#{pane_current_path}'
bind '"' split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'


bind-key -T copy-mode-vi 'v' send -X begin-selection # Start selecting text with 'v'
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "sed -e 's/\s\+$//' | clip.exe" # Copy text with 'y', preserving whitespace better
unbind -T copy-mode-vi MouseDragEnd1Pane # Don't exit copy mode when draggin with mouse


# Bind Ctrl+S so it can be used in nvim (by defualt it is not bind to anything):
unbind-key -n C-s


# THESE CONFIGS ARE FOR TMUX PLUGIN MANAGER AND SHOULD BE AT THE BOTTOM
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect' # Persist tmux session after reboot - use ctrl b ctrl r to attach to saved session
set -g @plugin 'tmux-plugins/tmux-continuum' # Save sessions every 15 minutes

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Enable resurrect and continuum
# set -g @resurrect-capture-pane-contents 'on'
# set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
